<?php

/*
 * @author Dinesh Copoosamy
 * Provide message templates for Privatemsg module
 */

/**
 * Implementation of hook_perm().
 */
function privatemsg_templates_perm() {
  return array('administer privatemsg templates','use privatemsg templates');
}


/**
 * Implements hook_menu().
 */
function privatemsg_templates_menu() {
  $items['admin/settings/messages/templates'] = array(
    'title'            => t('Private message templates'),
    'description'      => t('Configure private messaging template settings.'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('privatemsg_template_settings'),
    'access arguments' => array('administer privatemsg templates'),
    'type'             => MENU_LOCAL_TASK,    
  );
 $items['privatemsg_templates_get_template'] = array(
    'page callback' => 'privatemsg_templates_get_template',
    'type' => MENU_CALLBACK,
    'access arguments' => array('use privatemsg templates'),
  );  
  
 return $items;
}


function privatemsg_templates_get_template($nid){
	/* I am using node_load here - I think the debate against node_load doesn't hold here and I want
	 * this module to be able to take advantage of other modules that may manipulate the template possibly within the node_load
	 * - hope this makes sense
	 */
	$template_type = variable_get('privatemsg_template_content_type','');

	$template = node_load(array('nid'=>$nid,'type'=>$template_type));
	if(!empty($template)){		
		 drupal_json(array('status' => 0, 'data' => $template->body));
	}else{
		drupal_json(array('status' => 0, 'data' => ''));		
	}	
}

function privatemsg_template_settings(){
  $form = array();
  
  $form['privatemsg_templates'] = array(
	'#type' => 'fieldset',
	'#title' => t('Configure Privatemsg templates'),
  );

  $form['privatemsg_templates']['enable_privatemsg_templates'] = array(
    '#type' => 'checkbox',
	'#title' => t('Enable private message templates'),
	'#default_value' => variable_get('enable_privatemsg_templates',0),
	'#return_value' => 1,	
  );

  
  $types = array();
  foreach(node_get_types() as $name=>$type) $types[$name] = $type->name;
  
  $form['privatemsg_templates']['privatemsg_template_content_type'] = array(
    '#type' => 'select',
	'#title' => t('Template content type'),
	'#default_value' => variable_get('privatemsg_template_content_type',''),
	'#options' => $types,
	);
  return system_settings_form($form);
  
}

function privatemsg_templates_form_privatemsg_new_alter(&$form, &$form_state) {
  
	$type = variable_get('privatemsg_template_content_type','');
	
	if(variable_get('enable_privatemsg_templates',0) && !empty($type)){

		drupal_add_js(drupal_get_path('module', 'privatemsg_templates') .'/privatemsg_templates.js', 'file');
		
		
		/* Would like to add some kind of intelligence here - templates by role, user specific templates, etc
		 * Probably a good idea to incorporate the template content type into this module for that?
		 */
		$result = db_query('select nid,title from {node} where type = "'.$type.'";');		
		$templates = array(0=>t('Select a template'));
		while($template = db_fetch_object($result)){
			$templates[$template->nid] = $template->title;
		}	    		
		
		
		/* This should probably change to an autocomplete text field in case there are large amounts of template nodes
		 *  Only a few templates needed in my case
		 */
		$form['privatemsg']['privatemsg_templates'] = array(
			'#type' => 'select',
			'#title' => t('Template'),
			'#weight' => -1,
			'#options' => $templates,	
			//'#attributes' => array('onchange' => 'privatemsg_select_template(this.selectedIndex)'),			
		);
	}
}




?>